#ifndef _MAIN_
#define _MAIN_

#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <sys/stat.h>
#include <errno.h>
#include <fcntl.h>
#include <signal.h>
#include <limits.h>

#define BUFSIZE 1024
#define TOK_BUFSIZE 128
#define TOK_DELIM " \t\r\n\a"

/* Points to an array of pointers to strings called the "environment" */
extern char **environ;



typedef struct data
{
        char **av;
        char *input;
        char **args;
        int status;
        int counter;
        char **_environ;
        char *pid;
} dt_sh;
/*sig.c*/
void get_sign(int sign);
/*exit shell*/
int exit_shell(dt_sh *dath);
/*stringuts*/
char *_strcat(char *destination, const char *source);
char *_strcpy(char *dest, char *src);
int _strcmp(char *string1, char *string2);
char *_strchr(char *string, char character);
int _strspn(char *input, char *acceptedBytes);
/*strut2.c*/
char *_strdup(const char *s);
int _strlen(const char *s);
int cmp_chars(char str[], const char *delim);
char *_strtok(char str[], const char *delim);
int _isdigit(const char *s);
/*aux_help*/
void aux_help_env(void);
void aux_help_unsetenv(void);
void aux_help_setenv(void);
void aux_help_general(void);
void aux_help_exit(void);
void rev_string(char *s);
void aux_help(void);
void aux_help_alias(void);
void aux_help_cd(void);

/*stdlib*/
int get_len(int num);
char *aux_itoa(int num);
int _atoi(char *str);
/*cd*/
int cd_shell(dt_sh *dath);
void cd_dot(dt_sh *dath);
void cd_to(dt_sh *dath);
void cd_previous(dt_sh *dath);
void cd_to_home(dt_sh *dath);
/*memutils*/
void _memcpy(void *dest, const void *src, unsigned int size);
void *_realloc(void *ptr, unsigned int old_size, unsigned int new_size);
char **_reallocdp(char **ptr, unsigned int old_size, unsigned int new_size);
/*env.c*/
int cmp_env_name(const char *nenv, const char *name);
char *_getenv(const char *name, char **environ);
int _env(dt_sh *dath);
char *copy_info(char *name, char *value);
void set_env(char *name, char *value, dt_sh *dath);
int _setenv(dt_sh *dath);
int _unsetenv(dt_sh *dath);






  #endif
